<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <meta
      name="viewport"
      content="user-scalable=no, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, minimal-ui"
    />
    <link
      href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700|Source+Code+Pro:400,700"
      rel="stylesheet"
    />
    <title>GraphQL Playground</title>
    <link
      rel="stylesheet"
      href="//cdn.jsdelivr.net/npm/graphql-playground-react/build/static/css/index.css"
    />
    <link
      rel="shortcut icon"
      href="//cdn.jsdelivr.net/npm/graphql-playground-react/build/favicon.png"
    />
    <script src="https://cdn.jsdelivr.net/npm/mutation-events@1.0.8/src/mutation_events.min.js">
    </script>
    <script src="//cdn.jsdelivr.net/npm/graphql-playground-react/build/static/js/middleware.js">
    </script>
  </head>
  <body>
    <style type="text/css">
      html {
        font-family: "Open Sans", sans-serif;
        overflow: hidden;
      }
      body {
        margin: 0;
        background: #172a3a;
      }
      #playground-config {
        display: none;
      }
      .playgroundIn {
        -webkit-animation: playgroundIn 0.5s ease-out forwards;
        animation: playgroundIn 0.5s ease-out forwards;
      }
      @-webkit-keyframes playgroundIn {
        from {
          opacity: 0;
          -webkit-transform: translateY(10px);
          -ms-transform: translateY(10px);
          transform: translateY(10px);
        }
        to {
          opacity: 1;
          -webkit-transform: translateY(0);
          -ms-transform: translateY(0);
          transform: translateY(0);
        }
      }
      @keyframes playgroundIn {
        from {
          opacity: 0;
          -webkit-transform: translateY(10px);
          -ms-transform: translateY(10px);
          transform: translateY(10px);
        }
        to {
          opacity: 1;
          -webkit-transform: translateY(0);
          -ms-transform: translateY(0);
          transform: translateY(0);
        }
      }
    </style>
    <style type="text/css">
      #loading-wrapper {
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: column;
      }
      #loading-wrapper::after {
        content: '';
        flex-shrink: 0;
        width: 200px;
        height: 200px;
        -webkit-animation: spin 2s linear infinite;
        animation: spin 2s linear infinite;
        border-radius: 100%;
        border-style: solid;
        border-color: transparent;
        border-top-color: #00b586;
        border-width: 7px;
      }
      @-webkit-keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
      }
      @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
      }
    </style>
    <div id="loading-wrapper"></div>
    <div id="playground-config">
      <%= Jason.encode!(@config) %>
    </div>
    <div id="root" />
    <script type="text/javascript">
      window.addEventListener('load', function (event) {
        const loadingWrapper = document.getElementById('loading-wrapper');
        if (loadingWrapper) loadingWrapper.classList.add('fadeOut');
        const root = document.getElementById('root');
        root.classList.add('playgroundIn');
        const configText = document.getElementById('playground-config').innerText;
        if (configText && configText.length) {
          try {
            GraphQLPlayground.init(root, JSON.parse(configText));
          } catch (err) {
            console.error("could not find config")
          }
        } else {
          GraphQLPlayground.init(root);
        }
      })
    </script>
  </body>
</html>
